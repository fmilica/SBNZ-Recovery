package rules;

import java.util.List;
import com.sbnz.recovery.model.Patient;
import com.sbnz.recovery.model.Injury;
import com.sbnz.recovery.model.enums.Gender;
import com.sbnz.recovery.model.enums.PhysicalActivity;
import com.sbnz.recovery.model.enums.InjuryBodyPart;
import com.sbnz.recovery.model.InjuryType;
import com.sbnz.recovery.utility.DateUtility;

global String currentPatient;

rule "Sedentary injuries"
	salience 3
	agenda-group "new-activity-level"
    when
    	$ir: InjuryRequirement($lowerAge: lowerAgeBoundry,  $upperAge: upperAgeBoundry, 
    		$injuryType: injuryType, $injuryBodyParts: injuryBodyPart, $newActivityLevel: activityAfterInjury,
    		activityAfterInjury == PhysicalActivity.SEDENTARY)
    	$p: Patient( username == currentPatient, physicalActivityAfterInjury == null, 
    		 $age : DateUtility.getDiffYears(dateOfBirth),
    		 $age > $lowerAge, $age <= $upperAge)
		$internalInjuries : List(size > 0) 
			from collect(
				Injury(injuryType.name == $injuryType.name,
						$injuryBodyParts contains injuryBodyPart,
						this.getEndDate() == null) 
				from $p.medicalHistory
			)
    then
    	modify ($p) { setPhysicalActivityAfterInjury($newActivityLevel); }
    	System.out.println("Set physical activity level after injury to " + $newActivityLevel + ".");
end

rule "Light active injuries"
	salience 2
	agenda-group "new-activity-level"
    when
    	$ir: InjuryRequirement($lowerAge: lowerAgeBoundry,  $upperAge: upperAgeBoundry, 
    		$injuryType: injuryType, $injuryBodyParts: injuryBodyPart, $newActivityLevel: activityAfterInjury,
    		activityAfterInjury == PhysicalActivity.LIGHT_ACTIVE)
    	$p: Patient( username == currentPatient, physicalActivityAfterInjury == null, 
    		 $age : DateUtility.getDiffYears(dateOfBirth),
    		 $age > $lowerAge, $age <= $upperAge)
		$internalInjuries : List(size > 0) 
			from collect(
				Injury(injuryType.name == $injuryType.name,
						$injuryBodyParts contains injuryBodyPart,
						this.getEndDate() == null) 
				from $p.medicalHistory
			)
    then
    	modify ($p) { setPhysicalActivityAfterInjury($newActivityLevel); }
    	System.out.println("Set physical activity level after injury to " + $newActivityLevel + ".");
end

rule "Moderate injuries"
	salience 1
	agenda-group "new-activity-level"
    when
    	$ir: InjuryRequirement($lowerAge: lowerAgeBoundry,  $upperAge: upperAgeBoundry, 
    		$injuryType: injuryType, $injuryBodyParts: injuryBodyPart, $newActivityLevel: activityAfterInjury,
    		activityAfterInjury == PhysicalActivity.MODERATE)
    	$p: Patient( username == currentPatient, physicalActivityAfterInjury == null, 
    		 $age : DateUtility.getDiffYears(dateOfBirth),
    		 $age > $lowerAge, $age <= $upperAge)
		$internalInjuries : List(size > 0) 
			from collect(
				Injury(injuryType.name == $injuryType.name,
						$injuryBodyParts contains injuryBodyPart,
						this.getEndDate() == null) 
				from $p.medicalHistory
			)
    then
    	modify ($p) { setPhysicalActivityAfterInjury($newActivityLevel); }
    	System.out.println("Set physical activity level after injury to " + $newActivityLevel + ".");
end

rule "Change agenda-group to calories-after-injury"
	agenda-group "new-activity-level"
	salience -1
	when
		Patient()
	then
		System.out.println("Changed agenda-group from new-activity-level to calories-after-injury");
		kcontext.getKnowledgeRuntime().getAgenda().getAgendaGroup("calories-after-injury").setFocus();
end
