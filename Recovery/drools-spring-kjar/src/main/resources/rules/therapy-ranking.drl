package rules;

import java.time.LocalDate;
import java.lang.Math;

import com.sbnz.recovery.model.Patient;
import com.sbnz.recovery.model.AppliedTherapy;
import com.sbnz.recovery.model.ChosenPatient;
import com.sbnz.recovery.model.enums.Gender;
import com.sbnz.recovery.model.enums.AssignType;
import com.sbnz.recovery.utility.DateUtility;

global String chosenPatientUsername;

declare ApplicableTherapy
	patientId: Long
	therapy: Therapy
end


rule "Rank therapy for patient"
	agenda-group "rank-therapy"
	//no-loop
	salience ($matchedIllnessCount + $matchedInjuries.size())
    when
    	$cp: ChosenPatient($chosenPatientId: chosenPatientId, resolved == false, assignType == AssignType.THERAPY)
    	$p: Patient(id == $chosenPatientId, $illnesses: anamnesis)
    	$at: ApplicableTherapy(patientId == $chosenPatientId, 
    		$t: therapy, $therapyName : therapy.name, 
    		$til: therapy.applicableIllness, $tin: therapy.applicableInjury)
    	$activeInjuries : List() from collect(
				Injury(this.getEndDate() == null) 
				from $p.medicalHistory
		)
    	$matchedIllnessCount : Number(intValue >= $illnesses.size() / 2) from accumulate(
    													Illness($illness : this) from $illnesses
    													and Illness(this == $illness) from $til,
    													count($illness)
    													)
    	accumulate(
    		Injury($injury: this, $injuryType : injuryType) from $activeInjuries
			and InjuryType(id == $injuryType.id) from $tin,
			$matchedInjuries : collectList($injury)
    	)
    	eval($matchedInjuries.size() >= Math.ceil($activeInjuries.size() / 2.0))
    then
    	System.out.println("Assigned therapy " + $therapyName + " to patient " + $p.getUsername());
    	System.out.println($matchedInjuries);
    	System.out.println($activeInjuries);
    	modify($cp) { setResolved(true); }
    	modify($p) { addTherapyForInjury(new AppliedTherapy(LocalDate.now(), $t), (Injury)$matchedInjuries.get(0)); }
end


rule "Find all applicable therapies for patient"
	agenda-group "find-therapy"
	salience 1
	when
		$cp: ChosenPatient($chosenPatientId: chosenPatientId, resolved == false, assignType == AssignType.THERAPY)
		$p: Patient(id == $chosenPatientId, $injuries : medicalHistory)
		$t: Therapy($maximumApplication : maximumMonthlyApplication, $name : name)
		Number(intValue < $maximumApplication) from accumulate(
			Injury($appliedTherapies : appliedTherapies) from $injuries and
			$applicationPerInjury : Number(intValue > 0) from accumulate(
				AppliedTherapy($at : this,
					$date : applicationDate, $date.isAfter(LocalDate.now().minusDays(30)),
					therapy == $t) from $appliedTherapies,
				count($at)
			),
			sum($applicationPerInjury)
		)
	then
		System.out.println("Therapy " + $name + " is applicable for patient with username: " + $p.getUsername());
		insert(new ApplicableTherapy($chosenPatientId, $t));
end;
